#
# DO NOT EDIT
# This file is auto-generated by build utility
#
# Module Name:
#
#   Makefile
#
# Abstract:
#
#   Auto-generated makefile for building modules, libraries or platform
#
    

#
# Platform Macro Definition
#
PLATFORM_NAME = NT32
PLATFORM_GUID = EB216561-961F-47EE-9EF9-CA426EF547C2
PLATFORM_VERSION = 0.4
PLATFORM_RELATIVE_DIR = Nt32Pkg
PLATFORM_DIR = $(WORKSPACE)\Nt32Pkg
PLATFORM_OUTPUT_DIR = Build\NT32

#
# Module Macro Definition
#
MODULE_NAME = EdkNt32PeiPeCoffGetEntryPointLib
MODULE_GUID = 434b164e-5fa6-4a3d-bc04-02da2a4eeb26
MODULE_VERSION = 1.0
MODULE_TYPE = PEIM
MODULE_FILE = Nt32PeiPeCoffGetEntryPointLib.inf
MODULE_FILE_BASE_NAME = Nt32PeiPeCoffGetEntryPointLib
BASE_NAME = $(MODULE_NAME)
MODULE_RELATIVE_DIR = Nt32Pkg\Library\Nt32PeiPeCoffGetEntryPointLib
MODULE_DIR = $(WORKSPACE)\Nt32Pkg\Library\Nt32PeiPeCoffGetEntryPointLib

MODULE_ENTRY_POINT = _ModuleEntryPoint
ARCH_ENTRY_POINT = _ModuleEntryPoint
IMAGE_ENTRY_POINT = _ModuleEntryPoint

INF_VERSION = 0x00010005

#
# Build Configuration Macro Definition
#
ARCH = IA32
TOOLCHAIN = VS2012x86xASL
TOOLCHAIN_TAG = VS2012x86xASL
TARGET = RELEASE

#
# Build Directory Macro Definition
#
# PLATFORM_BUILD_DIR = d:\myworkspace\Build\NT32\RELEASE_VS2012x86xASL
BUILD_DIR = d:\myworkspace\Build\NT32\RELEASE_VS2012x86xASL
BIN_DIR = $(BUILD_DIR)\IA32
LIB_DIR = $(BIN_DIR)
MODULE_BUILD_DIR = d:\myworkspace\Build\NT32\RELEASE_VS2012x86xASL\IA32\Nt32Pkg\Library\Nt32PeiPeCoffGetEntryPointLib\Nt32PeiPeCoffGetEntryPointLib
OUTPUT_DIR = d:\myworkspace\Build\NT32\RELEASE_VS2012x86xASL\IA32\Nt32Pkg\Library\Nt32PeiPeCoffGetEntryPointLib\Nt32PeiPeCoffGetEntryPointLib\OUTPUT
DEBUG_DIR = d:\myworkspace\Build\NT32\RELEASE_VS2012x86xASL\IA32\Nt32Pkg\Library\Nt32PeiPeCoffGetEntryPointLib\Nt32PeiPeCoffGetEntryPointLib\DEBUG
DEST_DIR_OUTPUT = $(OUTPUT_DIR)
DEST_DIR_DEBUG = $(DEBUG_DIR)

#
# Shell Command Macro
#
RD = rmdir /s /q
RM = del /f /q
MD = mkdir
CP = copy /y
MV = move /y


#
# Tools definitions specific to this module
#

SYMRENAME =  echo
SYMRENAME_FLAGS = Symbol renaming not needed for

ASLDLINK =  C:\Program Files (x86)\Microsoft Visual Studio 11.0\Vc\bin\link.exe
ASLDLINK_FLAGS = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE




VFR =  VfrCompile
VFR_FLAGS = -l -n

PP =  C:\Program Files (x86)\Microsoft Visual Studio 11.0\Vc\bin\cl.exe
PP_FLAGS = /nologo /E /TC /FIAutoGen.h

LZMAF86 =  LzmaF86Compress
LZMAF86_GUID =  D42AE6BD-1352-4bfb-909A-CA72A6EAE889



GENFW =  GenFw
GENFW_FLAGS = 

OPTROM =  EfiRom
OPTROM_FLAGS = -e

SLINK =  C:\Program Files (x86)\Microsoft Visual Studio 11.0\Vc\bin\lib.exe
SLINK_FLAGS = /NOLOGO /LTCG



RC =  c:\Program Files\Microsoft SDKs\Windows\v6.0A\bin\rc.exe


ASM =  C:\Program Files (x86)\Microsoft Visual Studio 11.0\Vc\bin\ml.exe
ASM_FLAGS = /nologo /c /WX /W3 /Cx /coff /Zd

ASL =  C:\ASL\asl.exe
ASL_FLAGS = 
ASL_OUTFLAGS =  /Fo=


MTOC =  /usr/local/bin/mtoc

CC =  C:\Program Files (x86)\Microsoft Visual Studio 11.0\Vc\bin\cl.exe
CC_FLAGS = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /D EFI_SPECIFICATION_VERSION=0x0002000A /D TIANO_RELEASE_VERSION=0x00080006

VFRPP =  C:\Program Files (x86)\Microsoft Visual Studio 11.0\Vc\bin\cl.exe
VFRPP_FLAGS = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h



LZMA =  LzmaCompress
LZMA_GUID =  EE4E5898-3914-4259-9D6E-DC7BD79403CF

ASM16 =  C:\Program Files (x86)\Microsoft Visual Studio 11.0\Vc\bin\ml.exe

ASLCC =  C:\Program Files (x86)\Microsoft Visual Studio 11.0\Vc\bin\cl.exe
ASLCC_FLAGS = /nologo /c /FIAutoGen.h /TC /Dmain=ReferenceAcpiTable


MAKE =  C:\Program Files (x86)\Microsoft Visual Studio 11.0\Vc\bin\nmake.exe

DLINK =  C:\Program Files (x86)\Microsoft Visual Studio 11.0\Vc\bin\link.exe
DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.data=.text /MERGE:.rdata=.text /ALIGN:4096 /FILEALIGN:4096

TIANO =  TianoCompress
TIANO_GUID =  A31280AD-481E-41B6-95E8-127F4C984779

VPDTOOL =  BPDG
VPDTOOL_GUID =  8C3D856A-9BE6-468E-850A-24F7A8D38E08

CRC32 =  GenCrc32
CRC32_GUID =  FC1BCDB0-7D31-49AA-936A-A4600D9DD083

ASLPP =  C:\Program Files (x86)\Microsoft Visual Studio 11.0\Vc\bin\cl.exe
ASLPP_FLAGS = /nologo /E /C /FIAutoGen.h

OBJCOPY_ADDDEBUGFLAG =  
OBJCOPY =  echo
OBJCOPY_FLAGS = objcopy not needed for

APP =  C:\Program Files (x86)\Microsoft Visual Studio 11.0\Vc\bin\cl.exe
APP_FLAGS = /nologo /E /TC

ASMLINK =  C:\WINDDK\3790.1830\bin\bin16\link16.exe
ASMLINK_FLAGS = /nologo /tiny


MAKE_FILE = $(MODULE_BUILD_DIR)\Makefile

#
# Build Macro
#
OBJECT_FILES =  \
    $(OUTPUT_DIR)\PeCoffGetEntryPoint.obj

INC =  \
    /I$(WORKSPACE)\Nt32Pkg\Library\Nt32PeiPeCoffGetEntryPointLib \
    /I$(DEBUG_DIR) \
    /I$(WORKSPACE)\MdePkg \
    /I$(WORKSPACE)\MdePkg\Include \
    /I$(WORKSPACE)\MdePkg\Include\Ia32 \
    /I$(WORKSPACE)\Nt32Pkg \
    /I$(WORKSPACE)\Nt32Pkg\Include

OBJECT_FILES_LIST = d:\myworkspace\Build\NT32\RELEASE_VS2012x86xASL\IA32\Nt32Pkg\Library\Nt32PeiPeCoffGetEntryPointLib\Nt32PeiPeCoffGetEntryPointLib\OUTPUT\object_files.lst


COMMON_DEPS = $(WORKSPACE)\MdePkg\Include\PiPei.h \
              $(WORKSPACE)\Nt32Pkg\Include\WinNtDxe.h \
              $(WORKSPACE)\MdePkg\Include\Pi\PiBootMode.h \
              $(WORKSPACE)\MdePkg\Include\Library\BaseLib.h \
              $(WORKSPACE)\MdePkg\Include\Uefi\UefiMultiPhase.h \
              $(WORKSPACE)\MdePkg\Include\Uefi\UefiBaseType.h \
              $(WORKSPACE)\Nt32Pkg\Include\WinNtPeim.h \
              $(WORKSPACE)\MdePkg\Include\Ppi\CpuIo.h \
              $(WORKSPACE)\MdePkg\Include\Ia32\ProcessorBind.h \
              $(WORKSPACE)\MdePkg\Include\Pi\PiDependency.h \
              $(WORKSPACE)\MdePkg\Include\Library\PeiServicesLib.h \
              $(WORKSPACE)\MdePkg\Include\Pi\PiS3BootScript.h \
              $(WORKSPACE)\MdePkg\Include\Ppi\PciCfg2.h \
              $(WORKSPACE)\MdePkg\Include\Guid\WinCertificate.h \
              $(WORKSPACE)\Nt32Pkg\Include\Common\WinNtInclude.h \
              $(WORKSPACE)\MdePkg\Include\IndustryStandard\PeImage.h \
              $(DEBUG_DIR)\AutoGen.h \
              $(WORKSPACE)\MdePkg\Include\Pi\PiFirmwareVolume.h \
              $(WORKSPACE)\MdePkg\Include\Pi\PiMultiPhase.h \
              $(WORKSPACE)\MdePkg\Include\Pi\PiStatusCode.h \
              $(WORKSPACE)\MdePkg\Include\Library\DebugLib.h \
              $(WORKSPACE)\MdePkg\Include\Library\PeCoffGetEntryPointLib.h \
              $(WORKSPACE)\MdePkg\Include\Protocol\DebugSupport.h \
              $(WORKSPACE)\MdePkg\Include\Pi\PiFirmwareFile.h \
              $(WORKSPACE)\Nt32Pkg\Include\Ppi\NtPeiLoadFile.h \
              $(WORKSPACE)\Nt32Pkg\Include\Protocol\WinNtThunk.h \
              $(WORKSPACE)\MdePkg\Include\Pi\PiPeiCis.h \
              $(WORKSPACE)\MdePkg\Include\Base.h \
              $(WORKSPACE)\MdePkg\Include\Pi\PiHob.h \
              

#
# Overridable Target Macro Definitions
#
FORCE_REBUILD = force_build
INIT_TARGET = init
PCH_TARGET =
BC_TARGET = 
CODA_TARGET = d:\myworkspace\Build\NT32\RELEASE_VS2012x86xASL\IA32\Nt32Pkg\Library\Nt32PeiPeCoffGetEntryPointLib\Nt32PeiPeCoffGetEntryPointLib\OUTPUT\EdkNt32PeiPeCoffGetEntryPointLib.lib \
              

#
# Default target, which will build dependent libraries in addition to source files
#

all: mbuild


#
# Target used when called from platform makefile, which will bypass the build of dependent libraries
#

pbuild: $(INIT_TARGET) $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# ModuleTarget
#

mbuild: $(INIT_TARGET) $(BC_TARGET) gen_libs $(PCH_TARGET) $(CODA_TARGET)

#
# Build Target used in multi-thread build mode, which will bypass the init and gen_libs targets
#

tbuild: $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# Phony target which is used to force executing commands for a target
#
force_build:
	-@

#
# Target to update the FD
#

fds: mbuild gen_fds

#
# Initialization target: print build information and create necessary directories
#
init: info dirs

info:
	-@echo Building ... $(MODULE_DIR)\$(MODULE_FILE) [$(ARCH)]

dirs:
	-@if not exist $(DEBUG_DIR) $(MD) $(DEBUG_DIR)
	-@if not exist $(OUTPUT_DIR) $(MD) $(OUTPUT_DIR)


strdefs:
	-@$(CP) $(DEBUG_DIR)\AutoGen.h $(DEBUG_DIR)\$(MODULE_NAME)StrDefs.h

#
# GenLibsTarget
#
gen_libs:
	@cd $(MODULE_BUILD_DIR)

#
# Build Flash Device Image
#
gen_fds:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BUILD_DIR)\Makefile fds
	@cd $(MODULE_BUILD_DIR)

#
# Individual Object Build Targets
#
$(OUTPUT_DIR)\EdkNt32PeiPeCoffGetEntryPointLib.lib : $(OBJECT_FILES)
	"$(SLINK)" $(SLINK_FLAGS) /OUT:d:\myworkspace\Build\NT32\RELEASE_VS2012x86xASL\IA32\Nt32Pkg\Library\Nt32PeiPeCoffGetEntryPointLib\Nt32PeiPeCoffGetEntryPointLib\OUTPUT\EdkNt32PeiPeCoffGetEntryPointLib.lib @$(OBJECT_FILES_LIST)

$(OUTPUT_DIR)\PeCoffGetEntryPoint.obj : $(MAKE_FILE)
$(OUTPUT_DIR)\PeCoffGetEntryPoint.obj : $(COMMON_DEPS)
$(OUTPUT_DIR)\PeCoffGetEntryPoint.obj : $(WORKSPACE)\Nt32Pkg\Library\Nt32PeiPeCoffGetEntryPointLib\PeCoffGetEntryPoint.c
	"$(CC)" /Fod:\myworkspace\Build\NT32\RELEASE_VS2012x86xASL\IA32\Nt32Pkg\Library\Nt32PeiPeCoffGetEntryPointLib\Nt32PeiPeCoffGetEntryPointLib\OUTPUT\.\PeCoffGetEntryPoint.obj $(CC_FLAGS) $(INC) d:\myworkspace\Nt32Pkg\Library\Nt32PeiPeCoffGetEntryPointLib\PeCoffGetEntryPoint.c



#
# clean all intermediate files
#
clean:
	if exist $(OUTPUT_DIR) $(RD) $(OUTPUT_DIR)
	

#
# clean all generated files
#
cleanall:
	if exist $(DEBUG_DIR) $(RD) $(DEBUG_DIR)
	if exist $(OUTPUT_DIR) $(RD) $(OUTPUT_DIR)
	$(RM) *.pdb *.idb > NUL 2>&1
	$(RM) $(BIN_DIR)\$(MODULE_NAME).efi

#
# clean all dependent libraries built
#
cleanlib:
	@cd $(MODULE_BUILD_DIR)

